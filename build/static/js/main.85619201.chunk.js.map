{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["useHttp","request","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","_useHttp","heroesSlice","createSlice","name","reducers","heroCreated","state","action","addOne","payload","heroDeleted","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","heroes","filteredHeroesSelector","createSelector","filters","selectedFilter","filter","item","element","HeroesListItem","elementClassName","description","onDelete","_jsxs","className","children","_jsx","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","useSelector","filteredHeroes","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","err","arr","elements","CSSTransition","timeout","classNames","map","props","_objectWithoutProperties","_objectSpread","TransitionGroup","component","filtersAdapter","filtersLoadingStatus","fetchFilters","filtersSlice","filterSelect","stringMiddleWare","store","configureStore","middleware","getDefaultMiddleware","devTools","process","HeroesAddForm","_useState","useState","_useState2","_slicedToArray","heroName","setHeroName","_useState3","_useState4","heroDescr","setHeroDescr","_useState5","_useState6","heroElement","setHeroElement","getState","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","label","renderOptions","HeroesFilters","_useSelector","buttons","btnClass","active","App","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.85619201.chunk.js","sourcesContent":["export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n        \n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    }\n\n    return {request}\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\nimport {useHttp} from '../../hooks/http.hook';\n\nconst heroesAdapter = createEntityAdapter();\n\n\n// const initialState = {\n//     heroes: [],\n//     heroesLoadingStatus: 'idle'\n// }\n\nconst initialState = heroesAdapter.getInitialState({\n    heroesLoadingStatus: 'idle'\n});\n\nexport const fetchHeroes = createAsyncThunk(\n    'heroes/fetchHeroes',\n    async () => {\n        const {request} = useHttp();\n        return await request(\"http://localhost:3001/heroes\");\n    }\n)\n\nconst heroesSlice = createSlice({\n    name: 'heroes',\n    initialState,\n    reducers: {\n        heroCreated: (state, action) => {\n                        heroesAdapter.addOne(state, action.payload);\n                    },\n        heroDeleted: (state, action) => {\n                        heroesAdapter.removeOne(state, action.payload);\n                    }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\n                state.heroesLoadingStatus = 'idle';\n                heroesAdapter.setAll(state, action.payload);\n            })\n            .addCase(fetchHeroes.rejected, state => {\n                state.heroesLoadingStatus = 'error';\n            })\n            .addDefaultCase(() => {})\n    }\n\n    \n})\n\nconst {actions, reducer} = heroesSlice;\n\nexport default reducer;\n\nconst {selectAll} = heroesAdapter.getSelectors(state => state.heroes);\n\nexport const filteredHeroesSelector = createSelector(\n    (state) => state.filters.selectedFilter,\n    selectAll,\n    (filter, heroes) => {\n        if (filter === 'all') {\n            return heroes;\n        } else {\n            return heroes.filter(item => item.element === filter);\n        }\n    }\n);\n\nexport const {\n    heroCreated,\n    heroDeleted\n} = actions;","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span \n                onClick={onDelete}\n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect, useCallback} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport { heroDeleted, fetchHeroes, filteredHeroesSelector } from './heroesSlice';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    const filteredHeroes = useSelector(filteredHeroesSelector);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes());\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, 'DELETE')\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(heroDeleted(id)))\n            .catch(err => console.log(err));\n\n        // eslint-disable-next-line      \n    }, [request]);\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return ( \n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n                )\n        }\n\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition\n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\"> \n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport {useHttp} from '../../hooks/http.hook';\n\nconst filtersAdapter = createEntityAdapter();\n\nconst initialState = filtersAdapter.getInitialState({\n    selectedFilter: 'all',\n    filtersLoadingStatus: 'idle'\n});\n\nexport const fetchFilters = createAsyncThunk(\n    'filters/fetchFilters',\n    async () => {\n        const {request} = useHttp();\n        return await request(\"http://localhost:3001/filters\");\n    }\n)\n\nconst filtersSlice = createSlice({\n    name: 'filters',\n    initialState,\n    reducers: {\n        filterSelect: (state, action) => {\n            state.selectedFilter = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\n            .addCase(fetchFilters.fulfilled, (state, action) => {\n                state.filtersLoadingStatus = 'idle';\n                filtersAdapter.setAll(state, action.payload);\n            })\n            .addCase(fetchFilters.rejected, state => {state.filtersLoadingStatus = 'error'})\n            .addDefaultCase(() => {})\n    }\n})\n\nconst {actions, reducer} = filtersSlice;\n\nexport default reducer;\n\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters);\n\nexport const {filterSelect} = actions;","import { configureStore } from '@reduxjs/toolkit';\nimport filters from '../components/heroesFilters/filtersSlice';\nimport heroes from '../components/heroesList/heroesSlice';\n\nconst stringMiddleWare = () => (next) => (action) => {\n     if (typeof action === 'string') {\n          return next({\n               type: action\n          })\n     }\n     return next(action);\n}\n\n// const store = createStore(\n//                     combineReducers({filter, heroes}),\n//                     compose(applyMiddleware(ReduxThunk, stringMiddleWare),\n//                             window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n//                     );\n\nconst store = configureStore({\n     reducer: {heroes, filters},\n     middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleWare),\n     devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;","import { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {useHttp} from '../../hooks/http.hook';\nimport { useDispatch, useSelector } from 'react-redux';\nimport store from \"../../store\";\n\nimport { heroCreated } from \"../heroesList/heroesSlice\";\nimport { selectAll } from \"../heroesFilters/filtersSlice\";\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nconst HeroesAddForm = () => {\n\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const {filtersLoadingStatus} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n\n    const {request} = useHttp();\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        request('http://localhost:3001/heroes', 'POST', JSON.stringify(newHero))\n            .then(res => console.log(res, 'data posted:)'))\n            .then(dispatch(heroCreated(newHero)))\n            .catch(err => console.log(err));\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderOptions = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n\n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"border p-4 shadow-lg rounded\">\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option >Я владею элементом...</option>\n                    {renderOptions(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from \"classnames\";\nimport store from '../../store';\n\nimport { filterSelect, fetchFilters, selectAll } from \"./filtersSlice\";\nimport Spinner from \"../spinner/Spinner\";\n\nconst HeroesFilters = () => {\n    const {selectedFilter, filtersLoadingStatus} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchFilters());\n        // eslint-disable-next-line    \n    }, []);\n\n    if (filtersLoadingStatus === 'loading') {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === 'error') {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтров пока нет</h5>\n        }\n\n        return arr.map(({className, label, name}) => {\n\n            const btnClass = classNames('btn', className, {active: name === selectedFilter});\n\n            return (\n                <button \n                    onClick={() => dispatch(filterSelect(name))} \n                    key={uuidv4()} \n                    id={name} \n                    className={btnClass}>{label}</button>\n                )\n        });\n        \n    } \n\n\n    const buttons = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {buttons}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}